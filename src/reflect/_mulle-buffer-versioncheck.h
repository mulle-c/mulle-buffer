/*
 *   This file will be regenerated by `mulle-project-versioncheck`.
 *   Any edits will be lost.
 */
#ifndef mulle_buffer_versioncheck_h__
#define mulle_buffer_versioncheck_h__

#if defined( MULLE__ALLOCATOR_VERSION)
# ifndef MULLE__ALLOCATOR_VERSION_MIN
#  define MULLE__ALLOCATOR_VERSION_MIN  ((7UL << 20) | (1 << 8) | 0)
# endif
# ifndef MULLE__ALLOCATOR_VERSION_MAX
#  define MULLE__ALLOCATOR_VERSION_MAX  ((8UL << 20) | (0 << 8) | 0)
# endif
# if MULLE__ALLOCATOR_VERSION < MULLE__ALLOCATOR_VERSION_MIN || MULLE__ALLOCATOR_VERSION >= MULLE__ALLOCATOR_VERSION_MAX
#  pragma message("MULLE__ALLOCATOR_VERSION     is " MULLE_C_STRINGIFY_MACRO( MULLE__ALLOCATOR_VERSION))
#  pragma message("MULLE__ALLOCATOR_VERSION_MIN is " MULLE_C_STRINGIFY_MACRO( MULLE__ALLOCATOR_VERSION_MIN))
#  pragma message("MULLE__ALLOCATOR_VERSION_MAX is " MULLE_C_STRINGIFY_MACRO( MULLE__ALLOCATOR_VERSION_MAX))
#  if MULLE__ALLOCATOR_VERSION < MULLE__ALLOCATOR_VERSION_MIN
#   error "mulle-allocator is too old"
#  else
#   error "mulle-allocator is too new"
#  endif
# endif
#endif
#if defined( MULLE__DATA_VERSION)
# ifndef MULLE__DATA_VERSION_MIN
#  define MULLE__DATA_VERSION_MIN  ((0UL << 20) | (4 << 8) | 0)
# endif
# ifndef MULLE__DATA_VERSION_MAX
#  define MULLE__DATA_VERSION_MAX  ((0UL << 20) | (5 << 8) | 0)
# endif
# if MULLE__DATA_VERSION < MULLE__DATA_VERSION_MIN || MULLE__DATA_VERSION >= MULLE__DATA_VERSION_MAX
#  pragma message("MULLE__DATA_VERSION     is " MULLE_C_STRINGIFY_MACRO( MULLE__DATA_VERSION))
#  pragma message("MULLE__DATA_VERSION_MIN is " MULLE_C_STRINGIFY_MACRO( MULLE__DATA_VERSION_MIN))
#  pragma message("MULLE__DATA_VERSION_MAX is " MULLE_C_STRINGIFY_MACRO( MULLE__DATA_VERSION_MAX))
#  if MULLE__DATA_VERSION < MULLE__DATA_VERSION_MIN
#   error "mulle-data is too old"
#  else
#   error "mulle-data is too new"
#  endif
# endif
#endif

#endif
